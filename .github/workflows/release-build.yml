name: release-build
run-name: ${{ github.actor }} is publishing version ${{ inputs.version_name }}
on:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        description: "pre-release or production?"
        options:
          - prerelease
          - production
        default: prerelease
      version_name:
        description: "Version Name"
        required: true
jobs:
  publish-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          author_name: github.actor
          author_email: github
      - name: "set environment variables"
        run: |
          echo release_type: ${{inputs.release_type}}
          echo version_name: ${{inputs.version_name}}
          if [[ "${{inputs.release_type}}" == "production" ]]; then
            echo setting prerelease=false
            echo "prerelease=false" >> $GITHUB_ENV
          else
            echo setting prerelease=true
            echo "prerelease=true" >> $GITHUB_ENV
          fi
      - name: "publish release"
        run: |
          release_json=$(curl -X POST -H 'Authorization: Bearer ${{secrets.GITHUB_TOKEN}}' https://api.github.com/repos/${GITHUB_REPOSITORY}/releases -d '{ "tag_name": "${{inputs.version_name}}", "name": "${{inputs.version_name}}", "prerelease": ${{env.prerelease}}, "generate_release_notes": true }')
          upload_url=$(echo $release_json | grep -o '"upload_url": "[^"]*' | grep -o '[^"]*$')
          upload_url=${upload_url%\{*}
          echo upload_url: $upload_url
          echo "upload_url=${upload_url}" >> $GITHUB_ENV
      - name: "upload release asset"
        run: |
          git archive -o "AboveVTT-${{inputs.version_name}}.zip" HEAD
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/octet-stream" \
            ${{env.upload_url}}?name=AboveVTT-${{inputs.version_name}}.zip \
            --data-binary "AboveVTT-${{inputs.version_name}}.zip"
