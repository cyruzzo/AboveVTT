name: Determine Version Action
description: "Determine Version infomation"
runs:
  using: "composite"
  steps:
    - name: "Determine version_name"
      run: |
        version_name="${{inputs.version_name_override}}"
        if [[ -z "$version_name" ]]
        then
          echo "Good. No override was specified. Finding version"
          if [[ ${{inputs.release_type}} == "production" ]]
          then
            echo "using manifest.version"
            version_name=$(cat manifest.json | jq '.version')
          else
            previous_release_body='{"query":"{repository(owner: \"'
            previous_release_body+="${GITHUB_REPOSITORY_OWNER}"
            previous_release_body+='\", name: \"AboveVTT\"){releases(first:1,orderBy:{field:CREATED_AT,direction:DESC}){edges{node{name publishedAt}}}}}"}'
            previous_release_response=$(curl --request POST \
              --url https://api.github.com/graphql \
              --header "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" \
              --header 'Content-Type: application/json' \
              --data "$previous_release_body")
            previous_version=$(echo $previous_release_response | jq '.data.repository.releases.edges[0].node.name' | xargs echo)
            previous_release_timestamp=$(echo $previous_release_response | jq '.data.repository.releases.edges[0].node.publishedAt' | xargs echo)
            echo "previous_release_timestamp: ${previous_release_timestamp}"
            echo "previous_release_timestamp=${previous_release_timestamp}" >> $GITHUB_ENV

            version_name=''
            echo "previous_version: $previous_version"
            if [[ "${previous_version}" == *"-beta"* ]]
            then
              echo "incrementing previous_version"
              [[ "${previous_version}" =~ (.*[^0-9])([0-9]+)$ ]] && version_name="${BASH_REMATCH[1]}$((BASH_REMATCH[2] + 1))";
            else
              version_name=$(cat manifest.json | jq '.version' | xargs echo)
              version_name+="-beta1"
p              fi
            echo "version_name: $version_name"
          fi
        fi
        if [[ -z "$version_name" ]]
        then
          echo "Failed to determine version_name"
          exit 1
        fi
        echo "version_name: ${version_name}"
        echo "version_name=${version_name}" >> $GITHUB_ENV

